import ddsp
import ddsp.training

# Macros:
# ==============================================================================
batch_size = 16
learning_rate = 0.0003

# Parameters for processors.Add:
# ==============================================================================
processors.Add.name = 'add'

# Parameters for Autoencoder:
# ==============================================================================
Autoencoder.decoder = @decoders.RnnFcDecoder()
Autoencoder.encoder = None
Autoencoder.losses = [@losses.SpectralLoss()]
Autoencoder.preprocessor = @preprocessing.F0LoudnessPreprocessor()
Autoencoder.processor_group = @processors.ProcessorGroup()

# Parameters for exp_sigmoid:
# ==============================================================================
exp_sigmoid.exponent = 10.0
exp_sigmoid.max_value = 2.0
exp_sigmoid.threshold = 1e-07

# Parameters for F0LoudnessPreprocessor:
# ==============================================================================
F0LoudnessPreprocessor.time_steps = 1000

# Parameters for FilteredNoise:
# ==============================================================================
FilteredNoise.initial_bias = -5.0
FilteredNoise.n_samples = 64000
FilteredNoise.name = 'filtered_noise'
FilteredNoise.scale_fn = @core.exp_sigmoid
FilteredNoise.window_size = 0

# Parameters for get_model:
# ==============================================================================
get_model.model = @models.Autoencoder()

# Parameters for Harmonic:
# ==============================================================================
Harmonic.n_samples = 64000
Harmonic.name = 'harmonic'
Harmonic.normalize_below_nyquist = True
Harmonic.sample_rate = 16000
Harmonic.scale_fn = @core.exp_sigmoid

# Parameters for oscillator_bank:
# ==============================================================================
oscillator_bank.sum_sinusoids = True
oscillator_bank.use_angular_cumsum = False

# Parameters for ProcessorGroup:
# ==============================================================================
ProcessorGroup.dag = \
    [(@synths.Harmonic(), ['amps', 'harmonic_distribution', 'f0_hz']),
     (@synths.FilteredNoise(), ['noise_magnitudes']),
     (@processors.Add(), ['filtered_noise/signal', 'harmonic/signal']),
     (@effects.Reverb(), ['add/signal'])]

# Parameters for Reverb:
# ==============================================================================
Reverb.add_dry = True
Reverb.name = 'reverb'
Reverb.reverb_length = 48000
Reverb.trainable = True

# Parameters for RnnFcDecoder:
# ==============================================================================
RnnFcDecoder.ch = 512
RnnFcDecoder.input_keys = ('ld_scaled', 'f0_scaled')
RnnFcDecoder.layers_per_stack = 3
RnnFcDecoder.output_splits = \
    (('amps', 1), ('harmonic_distribution', 60), ('noise_magnitudes', 65))
RnnFcDecoder.rnn_channels = 512
RnnFcDecoder.rnn_type = 'gru'

# Parameters for run_dag:
# ==============================================================================
run_dag.verbose = True

# Parameters for SpectralLoss:
# ==============================================================================
SpectralLoss.cumsum_freq_weight = 0.0
SpectralLoss.delta_freq_weight = 0.0
SpectralLoss.delta_time_weight = 0.0
SpectralLoss.fft_sizes = (2048, 1024, 512, 256, 128, 64)
SpectralLoss.logmag_weight = 1.0
SpectralLoss.loss_type = 'L1'
SpectralLoss.loudness_weight = 0.0
SpectralLoss.mag_weight = 1.0
SpectralLoss.name = 'spectral_loss'

# Parameters for TFRecordProvider:
# ==============================================================================
TFRecordProvider.example_secs = 4
TFRecordProvider.file_pattern = 'data/train.tfrecord*'
TFRecordProvider.frame_rate = 250
TFRecordProvider.sample_rate = 16000

# Parameters for train:
# ==============================================================================
train.batch_size = %batch_size
train.data_provider = @data.TFRecordProvider()
train.num_steps = 30000
train.steps_per_save = 300
train.steps_per_summary = 300

# Parameters for Trainer:
# ==============================================================================
Trainer.checkpoints_to_keep = 10
Trainer.grad_clip_norm = 3.0
Trainer.learning_rate = %learning_rate
Trainer.lr_decay_rate = 0.98
Trainer.lr_decay_steps = 10000
Trainer.restore_keys = None
